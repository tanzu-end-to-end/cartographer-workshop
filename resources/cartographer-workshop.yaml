#@ load("@ytt:data", "data")
---
apiVersion: learningcenter.tanzu.vmware.com/v1beta1
kind: Workshop
metadata:
  name: cartographer-workshop
spec:
  title: Cartographer Workshop
  description: An introduction Supply Chain Choreography with Cartographer
  vendor: vmware.com
  difficulty: beginner
  duration: 60m
  url: https://github.com/tanzu-end-to-end/cartographer-workshop
  content:
    image: "harbor.tap.corby.cc/tanzu-e2e/eduk8s-cartographer-workshop:latest"
    files: "github.com/tanzu-end-to-end/cartographer-workshop?ref=main"
  environment:
    objects:
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        name: $(environment_name)-carto-workshop-cluster-role-rw
      rules:
      - apiGroups: 
          - source.toolkit.fluxcd.io
          - kpack.io
          - kapp.k14s.io/v1alpha1
          - kappctrl.k14s.io
          - serving.knative.dev
          - ops.tips
          - tekton.dev
          - ""
        resources:
          - gitrepositories
          - images
          - configs
          - apps
          - services
          - runnables
          - gitservers
          - configmaps
          - taskruns
        verbs: [list, create, update, delete, patch, watch, get]
      - apiGroups:
          - carto.run
        resources: ["*"]
        verbs: ["*"]
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        name: $(environment_name)-carto-workshop-cluster-role-ro
      rules:
      - apiGroups: 
          - kpack.io
          - apiextensions.k8s.io
          - serving.knative.dev
          - resolution.tekton.dev
          - tekton.dev
          - projectcontour.io
        resources:
          - images
          - builds
          - clusterbuilders
          - routes
          - configurations
          - revisions
          - domainmappings
          - resolutionrequests
          - clustertasks
          - customresourcedefinitions
          - contourdeployments
        verbs: [list, get]

  session:
    env:
    - name: GITEA_DOMAIN
      value: gitea.$(ingress_domain)
    - name: GITEA_USER
      value: gitea_admin
    - name: GITEA_PASSWORD
      value: VMware1!
    namespaces:
      budget: custom
    applications:
      terminal:
        enabled: true
        layout: split
      editor:
        enabled: true
      registry:
        enabled: true
      docker:
        enabled: true
    dashboards:
      - name: Cartographer
        url: https://cartographer.sh
    objects:
      - apiVersion: v1
        kind: LimitRange
        metadata:
          name: resource-limits
        spec:
          limits:
            - type: PersistentVolumeClaim
              max:
                storage: 10Gi
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          name: $(session_namespace)-workshop-rw-crb
          namespace: $(session_namespace)
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: $(environment_name)-carto-workshop-cluster-role-rw
        subjects:
          - kind: ServiceAccount
            namespace: $(workshop_namespace)
            name: $(service_account)
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          name: $(session_namespace)-session-rw-crb
          namespace: $(session_namespace)
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: $(environment_name)-carto-workshop-cluster-role-rw
        subjects:
          - kind: ServiceAccount
            namespace: $(session_namespace)
            name: default
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          name: $(session_namespace)-workshop-ro-crb
          namespace: $(session_namespace)
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: $(environment_name)-carto-workshop-cluster-role-ro
        subjects:
          - kind: ServiceAccount
            namespace: $(workshop_namespace)
            name: $(service_account)
      - apiVersion: secretgen.k14s.io/v1alpha1
        kind: Password
        metadata:
          name: gitea-admin
          namespace: $(session_namespace)
        spec: 
          secretTemplate:
            type: Opaque
            stringData:
              username: gitea-admin
              password: $(value)
      - apiVersion: v1
        kind: ConfigMap
        metadata:
          name: $(session_namespace)-gitea-values
          namespace: $(workshop_namespace)
        data:
          values.yml: |
            global: 
              imageRegistry: harbor.workshop.amer.end2end.link/docker-proxy
            gitea:
              admin:
                existingSecret: gitea-admin
              config:
                database:
                  DB_TYPE: sqlite3
            postgresql:
              enabled: false
            memcached:
              enabled: false
            persistence:
              size: 1Gi
      - apiVersion: kappctrl.k14s.io/v1alpha1
        kind: App
        metadata:
          name: $(session_namespace)-gitea
          namespace: $(workshop_namespace)
        spec:
          # Prevent hangs when Learning Center deletes namespace
          noopDelete: true
          serviceAccountName: $(service_account)
          fetch:
          - helmChart:
              name: gitea
              version: 6.0.0
              repository:
                url: https://dl.gitea.io/charts/
          template:
          - helmTemplate:
              namespace: $(session_namespace)
              valuesFrom:
              - configMapRef:
                  name: $(session_namespace)-gitea-values
          - ytt:
              ignoreUnknownComments: true
              inline:
                paths:
                  remove-test-pod.yaml: |
                    #@ load("@ytt:overlay", "overlay")
                    #@overlay/match by=overlay.subset({"apiVersion": "v1","kind": "Pod","metadata":{"name":"$(session_namespace)-gitea-test-connection"}}), missing_ok=True
                    #@overlay/remove
          deploy:
          - kapp:
              intoNs: $(session_namespace)
